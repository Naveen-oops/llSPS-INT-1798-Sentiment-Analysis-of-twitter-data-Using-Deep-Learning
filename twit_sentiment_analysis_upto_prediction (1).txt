import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset = pd.read_csv('train.csv')

import re
import nltk
nltk.download('stopwords')


from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
ps = PorterStemmer()
data=[]

for i in range(0,5970):
        tweet=dataset["Tweet"][i]
        tweet = re.sub('[0-9]', ' ', tweet)
        tweet = re.sub('[.]', ' ', tweet)
        tweet = re.sub('[,]', ' ', tweet)
        tweet = re.sub('[?]', ' ', tweet)
        tweet = tweet.lower()
        tweet = tweet.split()
        tweet = [ps.stem(word) for word in tweet if not word in set(stopwords.words('english'))]
        tweet = ' '.join(tweet)
        data.append(tweet)

from sklearn.feature_extraction.text import CountVectorizer
cv=CountVectorizer(max_features=1500)
X=cv.fit_transform(data).toarray()
y=dataset.iloc[:,1].values

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X, y, test_size=0.20, random_state=0)

import keras
from keras.models import Sequential
from keras.layers import Dense

model=Sequential()

model.add(Dense(units=6,init='uniform',activation='relu',input_dim=1500))

model.add(Dense(units=6,init='uniform',activation='relu'))

model.add(Dense(units=1,init='uniform',activation='sigmoid'))

model.compile(loss="binary_crossentropy",optimizer='adam',metrics=['accuracy'])

model.fit(X_train,y_train,epochs=50,batch_size=16)

model.save("twitmodel.h5")


from keras.models import load_model
import numpy as np
import pickle

model=load_model("twitmodel.h5")
with open('CounterVectorizer','rb') as file:
        cv=pickle.load(file)    
        entered_input="The food is worst"
        inp=cv.transform([entered_input])
        y_pred=model.predict(inp)
        if(y_pred>0.5):
            print("It is positive review")
        else:
            print("It is negative review")